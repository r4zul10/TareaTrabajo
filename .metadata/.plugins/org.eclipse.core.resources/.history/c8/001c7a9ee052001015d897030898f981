package com.example.demo;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import com.example.demo.controller.UserController;
import com.example.demo.entity.User;
import com.example.demo.service.UserService;
import com.fasterxml.jackson.databind.ObjectMapper;

@SpringBootTest
class DemoApplicationTests {

	@Test
	void contextLoads() {
	}

//	@WebMvcTest(UserController.class)
//	public class UserControllerTest {
//
//		@Autowired
//		private MockMvc mockMvc;
//
//		@MockBean
//		private UserService service;
//
//		@Autowired
//		private ObjectMapper objectMapper;
//
//		@Test
//		public void testCreateUser() throws Exception {
//			// Simular entrada
//			User user = new User();
//			user.setName("Juan");
//			user.setEmail("juan@test.com");
//			user.setPassword("1234");
//
//			// Simular retorno del servicio
//			Mockito.when(service.save(Mockito.any(User.class))).thenReturn(user);
//
//			// Realizar POST con MockMvc
//			mockMvc.perform(post("/ruta/de/crear") // Cambiar a la ruta real
//					.contentType(MediaType.APPLICATION_JSON).content(objectMapper.writeValueAsString(user)))
//					.andExpect(status().isOk()).andExpect(jsonPath("$.id").exists())
//					.andExpect(jsonPath("$.token").exists()).andExpect(jsonPath("$.isActive").value(true))
//					.andExpect(jsonPath("$.created").exists()).andExpect(jsonPath("$.lastLogin").exists())
//					.andExpect(jsonPath("$.modified")
//							.value("No se puede modificar un usuario al menos si no se le est√° enviando el ID"));
//		}
//	}
}
